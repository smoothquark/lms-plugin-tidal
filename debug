		$log->warn('unknown tidal item type: ' . Data::Dump::dump($item));
		main::INFOLOG && $log->is_info && $log->info("Reading albums... " . $accountName);
				$log->warn("Didn't receive tracks for $album->{title}/$album->{id}");
		main::INFOLOG && $log->is_info && $log->info("Reading artists... " . $accountName);
	main::INFOLOG && $log->is_info && $log->info("Removing playlists...");
		main::INFOLOG && $log->is_info && $log->info("Reading playlists for $accountName...");
		main::INFOLOG && $log->is_info && $log->info(sprintf("Importing tracks for %s playlists...", scalar @$playlists));
			main::INFOLOG && $log->is_info && $log->info("re-drilling using cache key: $key");
		main::INFOLOG && $log->is_info && $log->info("JSON RPC query items with action $action");
		main::INFOLOG && $log->is_info && $log->info("JSON RPC action $action for $id");
	main::INFOLOG && $log->is_info && $log->info("Browsing for item_id:$itemId or type:$type:$id");
			main::INFOLOG && $log->is_info && $log->info("re-drilling using cache key: $key");
	$log->error("metadata not cached for $id") && return [] unless $track && ref $track;
		main::INFOLOG && $log->is_info && $track && $log->info("Found $track for: $args->{title} - $args->{artist}");
			main::INFOLOG && $log->info("LastMix plugin is available - let's use it!");
			if (main::INFOLOG && $log->is_info && !$knownType) {
				$log->info('Unknown type: ' . $_->{type});
				main::DEBUGLOG && $log->is_debug && $log->debug(Data::Dump::dump($_));
		$log->warn($_) unless /^(?:TRACK|ARTIST)_MIX/;
	main::DEBUGLOG && $log->is_debug && $log->debug("Net replay gain: $gain");
	main::DEBUGLOG && $log->debug( 'Remote streaming TIDAL track: ' . $streamUrl );
		main::INFOLOG && $log->is_info && $log->info("Getting $url: method: $method, id: $id");
	main::DEBUGLOG && $log->debug("Error during getTrackInfo: $error");
		$log->error("can't get trackId");
					$log->warn("failed to get streamable HiRes track ($url - $result->{manifestMimeType}), trying regular CD quality instead");
			main::DEBUGLOG && $log->is_debug && $log->debug("Manifest for track " . $trackId . ": " . $manifest);
			#	$log->warn("did not get the expected format for $trackId ($format <> " . Plugins::TIDAL::API::getFormat() . ')');
			# main::INFOLOG && $log->info("got $format track at $streamUrl");
					$log->warn( "could not find $format header $error" );
	main::DEBUGLOG && $log->is_debug && $log->debug("Getting next track playback info for $url");
		main::DEBUGLOG && $log->is_debug && $log->debug("adding metadata query for $trackId");
			main::DEBUGLOG && $log->is_debug && $log->debug("found metadata for $trackId", Data::Dump::dump($meta));
